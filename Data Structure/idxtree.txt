#define RMIN 0
#define RMAX 1

class IndexTree
{
public:
	int n;
	bool type;
	VI tree;

	IndexTree(VI & vi, const bool select) : type(select)
	{
		n = 1;
		tree.resize(n * 4, select == RMIN ? INF : -INF);
		REP(i, vi.size()) update(i, vi[i]);
	}

	inline void update(int idx, int & val)
	{
		idx += n;
		while (idx)
		{
			tree[idx] = type == RMIN ? min(tree[idx], val) : max(tree[idx], val);
			idx >>= 1;
		}
	}

	inline int query(int l, int r)
	{
		l += n; r += n;
		int ret = type == RMIN ? INF : -INF;
		while (l <= r)
		{
			if (l % 2 == 1) ret = type == RMIN ? min(ret, tree[l++]) : max(ret, tree[l++]);
			if (r % 2 == 0) ret = type == RMIN ? min(ret, tree[r--]) : max(ret, tree[r--]);
			l >>= 1; r >>= 1;
		}
		return ret;
	}
};